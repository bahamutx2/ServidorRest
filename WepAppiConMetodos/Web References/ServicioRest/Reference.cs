//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WepAppiConMetodos.ServicioRest {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiciosMovilSoap", Namespace="http://tempuri.org/")]
    public partial class ServiciosMovil : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback iniciarSesionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerCategoriasOperationCompleted;
        
        private System.Threading.SendOrPostCallback CrearDenunciaPorFotoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiciosMovil() {
            this.Url = global::WepAppiConMetodos.Properties.Settings.Default.WepAppiConMetodos_ServicioRest_ServiciosMovil;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event iniciarSesionCompletedEventHandler iniciarSesionCompleted;
        
        /// <remarks/>
        public event ObtenerCategoriasCompletedEventHandler ObtenerCategoriasCompleted;
        
        /// <remarks/>
        public event CrearDenunciaPorFotoCompletedEventHandler CrearDenunciaPorFotoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/iniciarSesion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool iniciarSesion(string user, string pass) {
            object[] results = this.Invoke("iniciarSesion", new object[] {
                        user,
                        pass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void iniciarSesionAsync(string user, string pass) {
            this.iniciarSesionAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void iniciarSesionAsync(string user, string pass, object userState) {
            if ((this.iniciarSesionOperationCompleted == null)) {
                this.iniciarSesionOperationCompleted = new System.Threading.SendOrPostCallback(this.OniniciarSesionOperationCompleted);
            }
            this.InvokeAsync("iniciarSesion", new object[] {
                        user,
                        pass}, this.iniciarSesionOperationCompleted, userState);
        }
        
        private void OniniciarSesionOperationCompleted(object arg) {
            if ((this.iniciarSesionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.iniciarSesionCompleted(this, new iniciarSesionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCategorias", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ObtenerCategorias() {
            object[] results = this.Invoke("ObtenerCategorias", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerCategoriasAsync() {
            this.ObtenerCategoriasAsync(null);
        }
        
        /// <remarks/>
        public void ObtenerCategoriasAsync(object userState) {
            if ((this.ObtenerCategoriasOperationCompleted == null)) {
                this.ObtenerCategoriasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerCategoriasOperationCompleted);
            }
            this.InvokeAsync("ObtenerCategorias", new object[0], this.ObtenerCategoriasOperationCompleted, userState);
        }
        
        private void OnObtenerCategoriasOperationCompleted(object arg) {
            if ((this.ObtenerCategoriasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerCategoriasCompleted(this, new ObtenerCategoriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearDenunciaPorFoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CrearDenunciaPorFoto(string lat, string longi, string nombreCat, string imgb64) {
            object[] results = this.Invoke("CrearDenunciaPorFoto", new object[] {
                        lat,
                        longi,
                        nombreCat,
                        imgb64});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CrearDenunciaPorFotoAsync(string lat, string longi, string nombreCat, string imgb64) {
            this.CrearDenunciaPorFotoAsync(lat, longi, nombreCat, imgb64, null);
        }
        
        /// <remarks/>
        public void CrearDenunciaPorFotoAsync(string lat, string longi, string nombreCat, string imgb64, object userState) {
            if ((this.CrearDenunciaPorFotoOperationCompleted == null)) {
                this.CrearDenunciaPorFotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrearDenunciaPorFotoOperationCompleted);
            }
            this.InvokeAsync("CrearDenunciaPorFoto", new object[] {
                        lat,
                        longi,
                        nombreCat,
                        imgb64}, this.CrearDenunciaPorFotoOperationCompleted, userState);
        }
        
        private void OnCrearDenunciaPorFotoOperationCompleted(object arg) {
            if ((this.CrearDenunciaPorFotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrearDenunciaPorFotoCompleted(this, new CrearDenunciaPorFotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void iniciarSesionCompletedEventHandler(object sender, iniciarSesionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class iniciarSesionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal iniciarSesionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void ObtenerCategoriasCompletedEventHandler(object sender, ObtenerCategoriasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerCategoriasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerCategoriasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void CrearDenunciaPorFotoCompletedEventHandler(object sender, CrearDenunciaPorFotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrearDenunciaPorFotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrearDenunciaPorFotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591